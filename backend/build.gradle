
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.noah'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // Spring MVC
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // DataBase
    runtimeOnly 'com.mysql:mysql-connector-j'
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    // Devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // WebClient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // 외부 API 호출 HttpClientBuilder
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.14'
    // map을 json형식으로 변환
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
}

def generated = 'src/main/generated'

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

clean {
    delete file(generated)

}

tasks.named('test') {
    useJUnitPlatform()
}
