{"ast":null,"code":"import{initializeApp}from\"firebase/app\";import{getMessaging,getToken,onMessage}from\"firebase/messaging\";const firebaseConfig={apiKey:process.env.REACT_APP_FIREBASE_API_KEY,authDomain:process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,projectId:process.env.REACT_APP_FIREBASE_PROJECT_ID,storageBucket:process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,messagingSenderId:\"464040892211\",appId:process.env.REACT_APP_FIREBASE_APP_ID,measurementId:process.env.REACT_APP_FIREBASE_MEASUREMENT_ID};const app=initializeApp(firebaseConfig);const messaging=getMessaging(app);getToken(messaging,{vapidKey:process.env.REACT_APP_FIREBASE_VAPID_KEY}).then(currentToken=>{if(currentToken){// Send the token to your server and update the UI if necessary\n// ...\nconsole.log(currentToken);}else{// Show permission request UI\nconsole.log(\"No registration token available. Request permission to generate one.\");// ...\n}}).catch(err=>{console.log(\"An error occurred while retrieving token. \",err);// ...\n});onMessage(messaging,payload=>{console.log(\"Message received. \",payload);// ...\n});","map":{"version":3,"names":["initializeApp","getMessaging","getToken","onMessage","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","appId","REACT_APP_FIREBASE_APP_ID","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","app","messaging","vapidKey","REACT_APP_FIREBASE_VAPID_KEY","then","currentToken","console","log","catch","err","payload"],"sources":["C:/Users/SSAFY/projectdir/S10P22B106/frontend/noah/src/firebase-config.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: \"464040892211\",\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n};\r\nconst app = initializeApp(firebaseConfig);\r\nconst messaging = getMessaging(app);\r\n\r\ngetToken(messaging, {\r\n  vapidKey: process.env.REACT_APP_FIREBASE_VAPID_KEY,\r\n})\r\n  .then((currentToken) => {\r\n    if (currentToken) {\r\n      // Send the token to your server and update the UI if necessary\r\n      // ...\r\n      console.log(currentToken);\r\n    } else {\r\n      // Show permission request UI\r\n      console.log(\r\n        \"No registration token available. Request permission to generate one.\"\r\n      );\r\n      // ...\r\n    }\r\n  })\r\n  .catch((err) => {\r\n    console.log(\"An error occurred while retrieving token. \", err);\r\n    // ...\r\n  });\r\n\r\nonMessage(messaging, (payload) => {\r\n  console.log(\"Message received. \", payload);\r\n  // ...\r\n});\r\n"],"mappings":"AAAA,OAASA,aAAa,KAAQ,cAAc,CAC5C,OAASC,YAAY,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,oBAAoB,CAEtE,KAAM,CAAAC,cAAc,CAAG,CACrBC,MAAM,CAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B,CAC9CC,UAAU,CAAEH,OAAO,CAACC,GAAG,CAACG,8BAA8B,CACtDC,SAAS,CAAEL,OAAO,CAACC,GAAG,CAACK,6BAA6B,CACpDC,aAAa,CAAEP,OAAO,CAACC,GAAG,CAACO,iCAAiC,CAC5DC,iBAAiB,CAAE,cAAc,CACjCC,KAAK,CAAEV,OAAO,CAACC,GAAG,CAACU,yBAAyB,CAC5CC,aAAa,CAAEZ,OAAO,CAACC,GAAG,CAACY,iCAC7B,CAAC,CACD,KAAM,CAAAC,GAAG,CAAGpB,aAAa,CAACI,cAAc,CAAC,CACzC,KAAM,CAAAiB,SAAS,CAAGpB,YAAY,CAACmB,GAAG,CAAC,CAEnClB,QAAQ,CAACmB,SAAS,CAAE,CAClBC,QAAQ,CAAEhB,OAAO,CAACC,GAAG,CAACgB,4BACxB,CAAC,CAAC,CACCC,IAAI,CAAEC,YAAY,EAAK,CACtB,GAAIA,YAAY,CAAE,CAChB;AACA;AACAC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC,CAC3B,CAAC,IAAM,CACL;AACAC,OAAO,CAACC,GAAG,CACT,sEACF,CAAC,CACD;AACF,CACF,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,EAAK,CACdH,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAEE,GAAG,CAAC,CAC9D;AACF,CAAC,CAAC,CAEJ1B,SAAS,CAACkB,SAAS,CAAGS,OAAO,EAAK,CAChCJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEG,OAAO,CAAC,CAC1C;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}